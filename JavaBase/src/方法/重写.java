package 方法;
/*
@ 方法重写（覆盖、覆写）（Override）：重写是子类对父类的允许访问的方法的实现过程进行重新编写, 返回值和形参都不能改变。即外壳不变，核心重写！

@ 作用：重写的好处在于子类可以根据业务需要，重定义方法的行为，也就是说子类能够根据需要实现父类的方法。

@ 重写要求：
    1. 方法的名称、参数列表（类型\个数\顺序）必须相同
    2. 返回值范围：子类重写方法必须【小于等于】父类方法（即子类的返回值是父类返回值的派生类）
    3. 访问权限：子类重写方法必须【大于等于】父类方法

@ 访问权限：public > protected > (default) > private

@ 注解：@Override 写在方法前面，可用来检测是不是有效的正确覆盖重写（可写可不写）

@ 注意事项：
    1.重写只能是子类对父类（祖先类）的重写，不能是对本类或子类方法的重写
    2.声明为 final 的方法不能被重写。

*/
public class 重写 {

}

package 类和对象.构造器;

import 示例.Student;

/**
@构造器（Constructor/构造方法/构造函数）： 构造器是专门用来创建对象的特殊方法，当我们通过关键字new来创建对象时，其实就是在调用构造方法。

@作用：
    1.创建对象
    2.初始化对象信息

@格式：
    权限修饰符 类名(参数类型 参数名称) {
        方法体
    }

@构造方法与成员方法的区别：
    1. 构造方法的名称必须和所在的类名称完全一模一样
    2. 构造方法不写返回值类型，连void都不写，也不能 return
    3. 构造方法用于创建对象，并进行初始化值；普通成员方法是用于完成特定功能的。
    4. 构造方法是在创建对象时被调用的，一个对象建立，只调用一次相应构造函数；普通成员方法是由创建好的对象调用，可以调用多次

（注：构造方法可以看作特殊的成员方法）

@成员变量赋值的先后顺序：
    1.默认初始化
    2.显式赋值
    3.构造器赋值
    4.通过“对象.方法”或“对象.属性”赋值
（注：123只执行一次，4可以反复执行）

@注意事项：
    1. 如果没有编写任何构造方法，那么编译器将会默认创建一个空的构造方法（没有参数、方法体什么事情都不做：public Student() {}）
    2. 默认提供的构造器的权限修饰符与类相同
    3. 一旦显式定义一个构造方法，那么编译器将不再默认创建。
    4. 构造方法允许重载。（重载：方法名称相同，参数列表不同）
    5. 一个类至少有一个构造器，创建一个对象的时候，至少要调用一个构造器
    6. 构造方法允许被各种权限修饰符修饰
 */
public class Main {
    public static void main(String[] args) {
        TestConstructor car1 = new TestConstructor();
        car1.say();

        TestConstructor car2 = new TestConstructor("本田", "思域", 2019, "以人为本,共创未来");
        car2.say();

        Object stu = new Student(){

        };
    }


}



package 类和对象.类的成员;
/*
@ 定义：类的成员包括类的变量和方法。声明在类中的变量，叫作成员变量（属性、域、字段、field），声明在类中的方法，叫作成员方法（行为、函数、method）

@ 注：面向对象的设计重点是类的设计，而设计类其实是【设计类的成员】

@ 分类：
    1.非静态成员变量和方法（实例成员）
    2.静态成员变量和方法（类成员）

@ 注意事项：
    1. 当方法的局部变量和类的成员变量重名的时候，根据“就近原则”，优先使用局部变量

@ 成员变量的默认值：成员变量有默认值，不同类型的成员变量有不同的默认值，与数组一致
    如果是整数类型，那么默认为0；
    如果是浮点类型，那么默认为0.0；
    如果是字符类型，那么默认为'\u0000'(一个特殊字符)；
    如果是布尔类型，那么默认为false；
    如果是引用类型，那么默认为null。

@ 实例变量、静态变量、局部变量的对比:
    1. 定义的位置不一样【重点】
    成员变量：定义在类中
    局部变量：定义在方法（包括构造器）中、方法（包括构造器）形参、代码块、

    2. 作用范围不一样【重点】
    成员变量：整个类全都可以通用。
    局部变量：只有方法当中才可以使用，出了方法就不能再用

    3. 默认值不一样【重点】
    成员变量：如果没有赋值，会有默认值，规则和数组一样
    局部变量：没有默认值，如果要想使用，必须手动进行赋值

    4. 内存的位置不一样
    实例变量：位于堆内存，跟着实例对象走，new的时候创建
    静态变量：位于方法区（静态域），跟着类走
    局部变量：位于栈内存，跟着方法走，方法进栈，局部变量创建

    5. 生命周期不一样
    实例变量：随着实例对象创建而诞生，随着实例对象被垃圾回收而消失。所以实例变量生命周期就是实例对象的开始和销毁。
    静态变量：随着类声明而诞生，随着类被垃圾回收而消失。所以静态变量生命周期就是类的开始和销毁。
    局部变量：随着方法进栈而诞生，随着方法出栈而消失。所以局部变量生命周期就是方法的开始和销毁。

    6.权限修饰符的不同
    成员变量不可用权限修饰符

 */
public class Main {
    public static void main(String[] args) {
        MemberVar mv = new MemberVar();
    }
}

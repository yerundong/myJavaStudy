package 多线程;

/**
 @创建线程方式：
    1.创建 Thread 子类

 线程状态参考：https://blog.csdn.net/pange1991/article/details/53860651

 线程是一个动态执行的过程，它有一个从产生到死亡的过程，共五种状态：
    新建（new Thread）
    当创建Thread类的一个实例（对象）时，此线程进入新建状态（未被启动）
    就绪（runnable）
    线程已经被启动，正在等待被分配给CPU时间片，也就是说此时线程正在就绪队列中排队等候得到CPU资源。例如：t1.start();
    运行（running）
    线程获得CPU资源正在执行任务（run()方法），此时除非此线程自动放弃CPU资源或者有优先级更高的线程进入，线程将一直运行到结束。
    死亡（dead）
    当线程执行完毕或被其它线程杀死，线程就进入死亡状态，这时线程不可能再进入就绪状态等待执行。
    自然终止：正常运行run()方法后终止
    异常终止：调用stop()方法让一个线程终止运行
    堵塞（blocked）
    由于某种原因导致正在运行的线程让出CPU并暂停自己的执行，即进入堵塞状态。
    正在睡眠：用sleep(long t) 方法可使线程进入睡眠方式。一个睡眠着的线程在指定的时间过去可进入就绪状态。
    正在等待：调用wait()方法。（调用motify()方法回到就绪状态）
    被另一个线程所阻塞：调用suspend()方法。（调用resume()方法恢复）。
 */
public class Base {
    public static void main(String[] args) {

    }
}
